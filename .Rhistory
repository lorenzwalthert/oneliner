transformer <- make_transformer(transformers)
max_char <- min(max(nchar(files), 0), 80)
if (length(files) > 0L) {
cat('Styling ', length(files), ' files:\n')
}
changed <- map_lgl(
files, transform_file, fun = transformer, max_char_path = max_char
)
communicate_summary(changed, max_char)
communicate_warning(changed, transformers)
data_frame(file = files, changed = changed)
}
")
style_text("#' Transform files with transformer functions
#'
#' `transform_files` applies transformations to file contents and writes back
#' the result.
#' @param files A character vector with paths to the file that should be
#'   transformed.
#' @inheritParams make_transformer
#' @section Value:
#' Invisibly returns a data frame that indicates for each file considered for
#' styling whether or not it was actually changed.
#' @keywords internal
transform_files <- function(files, transformers) {
transformer <- make_transformer(transformers)
max_char <- min(max(nchar(files), 0), 80)
if (length(files) > 0L) {
cat('Styling ', length(files), ' files:\n')
}
changed <- map_lgl(
files, transform_file, fun = transformer, max_char_path = max_char
)
communicate_summary(changed, max_char)
communicate_warning(changed, transformers)
data_frame(file = files, changed = changed)
}
", style = one_line_style)
devtools::load_all(".")
usethis::use_package("rlang")
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
style_text("#' Transform files with transformer functions
#'
#' `transform_files` applies transformations to file contents and writes back
#' the result.
#' @param files A character vector with paths to the file that should be
#'   transformed.
#' @inheritParams make_transformer
#' @section Value:
#' Invisibly returns a data frame that indicates for each file considered for
#' styling whether or not it was actually changed.
#' @keywords internal
transform_files <- function(files, transformers) {
transformer <- make_transformer(transformers)
max_char <- min(max(nchar(files), 0), 80)
if (length(files) > 0L) {
cat('Styling ', length(files), ' files:\n')
}
changed <- map_lgl(
files, transform_file, fun = transformer, max_char_path = max_char
)
communicate_summary(changed, max_char)
communicate_warning(changed, transformers)
data_frame(file = files, changed = changed)
}
", style = one_line_style)
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
usethis::use_package("maggritr")
usethis::use_package("magrittr")
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
style_text("1+1\n2", style = one_line_style)
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
style_text(
"sum <- function(x, y) {
x + # hi
y
}
1 + 1",
style = one_line_style
)
style_text(
"sum <- function(x, y) {
x + # hi
y
}
1 + 1",
style = one_line_style
)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
style_text("1+1\n2", style = one_line_style)
pd
styler:::create_tokens(
"';'", ";",
pos_ids = map_dbl(needs_semicolon, styler:::create_pos_ids, pd = pd)
)
map_dbl(needs_semicolon, styler:::create_pos_ids, pd = pd)
semicolumn_pds <- styler:::create_tokens(
"';'", ";",
pos_ids = map_dbl(needs_semicolon, styler:::create_pos_ids, pd = pd)
)
styler:::bind_rows(pd, semicolumn_pds) %>%
styler:::arrange(pos_id)
styler:::bind_rows(pd, semicolumn_pds)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
needs_semicolon
pd
which(lag(pd$token == "expr" & pd$newlines > 0L))
style_text("1+1\n2", style = one_line_style)
which(lag(pd$token == "expr" & pd$newlines > 0L))
pd
pd$token == "expr"
pd$newlines > 0L
lag
pd$token == "expr" & pd$newlines > 0L
lag(pd$token == "expr" & pd$newlines > 0L)
devtools::load_all(".")
style_text("1+1\n2", style = one_line_style)
?lag
devtools::load_all(".")
style_text(
"sum <- function(x, y) {
x + # hi
y
}
1 + 1",
style = one_line_style
)
sum<-function(x,y){x+y};1+1
usethis::use_package("tibble")
usethis::use_package("rlang")
usethis::use_package("purrr")
devtools::load_all(".")
usethis::use_gpl3_license()
usethis::use_gpl3_license("Lorenz Walthert")
devtools::load_all(".")
usethis::use_readme_rmd()
devtools::load_all(".")
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
roxygen2::roxygenise()
library(oneliner)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
# remotes::install_github("lorenzwalthert/oneliner")
library(oneliner)
style_text(
"sum <- function(x, y) {
x + # hi
y
}
1 + 1",
style = one_line_style
)
style_text("sum<-function(x,y){x+y};1+1")
style_text("sum<-function(x,y){x+y};1+1")
style_text("sum<-function(x,y){x+y};1+1", style = one_line_style)
fs::file_exists("Rjd.csv")
?fs::as_fs_path()
fs::fs_path("hi")
fs::as_fs_path("hi")
?styler
library(styler)
?styler
styler:::is_brace_expr
usethis::use_r("expr-is")
devtools::load_all(".")
roxygen2::roxygenise()
devtools::load_all(".")
library(oneliner)
library(oneliner)
library(oneliner)
style_text("test_that(a, {\n 'hi'\n}")
style_text("test_that(a, {\n 'hi'\n})")
style_text("test_that(a, {\n 'hi'\n})", style = one_line_style)
style_text("test_that(a, {\n 'hi'\n})", style = one_line_style)
pd
pd
pd
pd
pd
is_brace_expr(pd)
needs_semicolon
which(styler:::lag(pd$token == "expr" & pd$newlines > 0L))
pd
View(pd)
style_text("test_that(a, {\n 'hi'\n}, {})", style = one_line_style)
style_text("test_that(a, {\n 'hi'\n}, {})", style = one_line_style)
style_text("1+1;1", style = one_line_style)
style_text("1+1\n1", style = one_line_style)
style_text("1+1\n1", style = one_line_style)
pd
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop("Can only style .R and .Rmd files.", call. = FALSE)
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ""), collapse = "\n"), id = context$id
)
if (Sys.getenv("save_after_styling") == TRUE && context$path != "") {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style)
pd
pd
pd
pd
pd
is_brace_expr(pd)
which(styler:::lag(pd$token == "expr" & pd$newlines > 0L))
style_text("1+1\n1", style = one_line_style)
pd
style_text("1+1\n1", style = one_line_style)
pd
which(styler:::lag(pd$token == "expr" & pd$newlines > 0L))
devtools::load_all(".")
style_text("1+1\n1", style = one_line_style)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style) %>% style_text()
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style) -> x
x %>% strsplit(";", fixed = TRUE)
style_active_file<-function(){transformer<-make_transformer(tidyverse_style())
context<-get_rstudio_context()
}
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
}
}", style = one_line_style) -> x
x
style_text(x)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style) -> x
style_text(x)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
}", style = one_line_style) -> x
style_text(x)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
}
}", style = one_line_style) -> x
style_text(x)
style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
}
}
style_text(
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
", style = one_line_style) -> x
)
style_text(
"if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
", style = one_line_style) -> x
style_text(x)
lead(1:10)
dplyr::lead(1:10)
dplyr::lead(T, F, F)
dplyr::lead(c(T, F, F))
dplyr::lead(c(T, F, F, T))
devtools::load_all(".")
style_text(
"if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
", style = one_line_style) -> x
devtools::load_all(".")
style_text(
"if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
", style = one_line_style) -> x
style_text(x)
devtools::load_all(".")
style_text(x)
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style) -> x
style_text(x)
library(oneliner)
devtools::load_all(".")
style_text("style_active_file <- function() {
transformer <- make_transformer(tidyverse_style())
context <- get_rstudio_context()
if (is_rmd_file(context$path)) {
out <- transform_rmd(context$contents, transformer)
} else if (is_plain_r_file(context$path) | is_unsaved_file(context$path)) {
out <- try_transform_as_r_file(context, transformer)
} else {
stop()
}
rstudioapi::modifyRange(
c(1, 1, length(context$contents) + 1, 1),
paste0(append(out, ss), collapse = '\n'), id = context$id
)
if (Sys.getenv(save_after_styling) == TRUE && context$path != b) {
rstudioapi::documentSave(context$id)
}
}", style = one_line_style) -> x
style_text(x)
library(oneliner)
library(oneliner)
getParseData("a->b")
styler:::get_parse_data("a->b")
devtools::load_all(".")
library(oneliner)
styler:::get_parse_data("a >b")
library(oneliner)
library(oneliner)
library(oneliner)
library(oneliner)
library(oneliner)
library(oneliner)
